
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
        }
        mavenCentral()
    }
    ext {
        projectVersion = '1.3.0-RELEASE'
        grpcVersion = '1.6.1'
        protobufVersion = '3.3.0'
        protobufGradlePluginVersion = '0.8.0'
        springCloudConsulVersion = '1.2.1.RELEASE'
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath "gradle.plugin.com.liferay:gradle-plugins-node:4.3.0"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}
plugins {
    id "com.arenagod.gradle.MybatisGenerator" version "1.4" //gradle提供的mybatis generator插件
}
group 'Tron'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


sourceCompatibility = 1.8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options*.compilerArgs = [
        "-Xlint:serial", "-Xlint:varargs", "-Xlint:classfile", "-Xlint:dep-ann",
        "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
        "-Xlint:path", "-Xlint:static", "-Xlint:try", "-Xlint:fallthrough",
        "-Xlint:deprecation", "-Xlint:unchecked", "-Xlint:-options"
]
mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/generatorConfig.xml'
}


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/protos'
        }
        java {
            srcDir 'src/main/gen'
            srcDir 'src/main/java'
        }
        resources {
            //可以将java目录下的所有非.java资源打包到classes下
            srcDir 'src/main/java'
        }
    }

}
task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.beust', name: 'jcommander', version: '1.72'
    //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile 'com.maxmind.geoip2:geoip2:2.10.0'

    // google grpc
    compile group: 'io.grpc', name: 'grpc-netty', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.9.0'
    compile group: 'io.grpc', name: 'grpc-stub', version: '1.9.0'

    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.4'
    compile "com.madgag.spongycastle:core:1.58.0.0"
    compile "com.madgag.spongycastle:prov:1.58.0.0"
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile "com.google.code.findbugs:jsr305:3.0.0"
    compile "org.springframework.cloud:spring-cloud-starter-consul-discovery:${springCloudConsulVersion}"
    compile "org.apache.commons:commons-collections4:4.0"
    compile "org.apache.commons:commons-lang3:3.4"
    compile group: 'com.google.api.grpc', name: 'googleapis-common-protos', version: '0.0.3'
    compile 'com.alibaba:fastjson:1.2.47'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.2'

    compile group: 'org.jline', name: 'jline', version: '3.1.3'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.3'
//    compile 'mysql:mysql-connector-java:5.1.6'
    compile group: 'com.alibaba', name: 'druid', version: '1.1.12'
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    compile 'mysql:mysql-connector-java'
    implementation 'org.apache.tuweni:tuweni-bytes:1.0.0'
    implementation 'org.apache.tuweni:tuweni-units:1.0.0'
}


protobuf {
    generatedFilesBaseDir = "$projectDir/src/"
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"

    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = "gen"
                }
            }
        }
        all()*.plugins {
            grpc {
                outputSubDir = "gen"
            }
        }
    }
}

run {
    standardInput = System.in
    //mainClassName = 'org.tron.walletcli.Client'
    mainClassName = 'com.wswl.WalletBootApplication'
}
processResources {
    from('src/main/java') {
        include '**/*'
    }
}

shadowJar {
    baseName = 'wallet-cli'
    classifier = null
    version = null
}
task createPom << {
    pom {
        project {
            groupId 'com.lockbur'
            artifactId 'lockbur-server'
            version '1.0.0-SNAPSHOT'
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
}
